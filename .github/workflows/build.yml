name: Build

on:
  push:
    branches:
      - master
#  repository_dispatch:
#    types: [build]
  workflow_dispatch:

jobs:

  buildTestRelease:

    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        include:
          - os: windows-latest
            extension: ".zip"
            runtime: "win-x64"
            package_runtime: "win-x64"
          - os: ubuntu-latest
            extension: ".tar.gz"
            runtime: "linux-x64"
            package_runtime: "linux-x64"
          - os: macos-latest
            runtime: "osx-x64"
            package_runtime: "mac-x64"
            extension: ".zip"
        node_version: [12.x]
        dotnet_version: ['3.1.300']
      fail-fast: false

    runs-on: ${{ matrix.os }}

    env:
      PROJECT_NAME: 'x42.Node'
      SOLUTION_PATH: 'src/Blockcore.sln'
      PROJECT_PATH: 'src/Networks/x42/x42.Node/x42.Node.csproj'
      BUILD_CONFIGURATION: 'Release'

    steps:

    - uses: actions/checkout@v2
      name: Checkout

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: | 
          6.0.x

    - name: Setup Node.js (16.x)
      uses: actions/setup-node@v1
      with:
        node-version: 18

    - name: Variables
      run: |
        echo VERSION=$(npm run version --silent) >> $GITHUB_ENV
      shell: bash
        echo "::set-env name=RELEASE_CONFIGURATION::${{ matrix.runtime }}"

    - name: Unit Test
      run: |
        dotnet nuget locals all --clear
        dotnet test -v=normal --filter "FullyQualifiedName!~IntegrationTests&Unstable!=True" -c ${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_PATH}}

    - name: Build
      run: dotnet build -c ${{env.BUILD_CONFIGURATION}} -r ${{env.RELEASE_CONFIGURATION}} -v m ${{env.SOLUTION_PATH}}

    - uses: actions/upload-artifact@v2
      with:
        name: Blockcore-${{env.VERSION}}-${{matrix.os}}-preview
        path: "${{github.workspace}}/package/"

    - name: Release
      if: matrix.os == 'ubuntu-latest'
      uses: sondreb/action-release@main
      with:
        commit: 'master'
        token: ${{ secrets.GITHUB_TOKEN }}
        files: "${{env.RELEASE_PATH}}"
        draft: true
        prerelease: true
        body: ''
        name: "Blockcore ${{env.VERSION}}"
        tag: ${{env.VERSION}}
